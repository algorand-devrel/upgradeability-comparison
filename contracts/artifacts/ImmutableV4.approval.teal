#pragma version 9

// This TEAL was generated by TEALScript v0.47.0
// https://github.com/algorand-devrel/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implmented in the contract, its repsective branch will be "NOT_IMPLMENTED" which just contains "err"
txn ApplicationID
int 0
>
int 6
*
txn OnCompletion
+
switch create_NoOp NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED call_NoOp

NOT_IMPLEMENTED:
	err

// setSourceApplication(application)void
abi_route_setSourceApplication:
	// app: application
	txna ApplicationArgs 1
	btoi
	txnas Applications

	// execute setSourceApplication(application)void
	callsub setSourceApplication
	int 1
	return

setSourceApplication:
	proto 1 0

	// contracts/immutable-v4.algo.ts:10
	// assert(this.txn.sender === this.app.creator)
	txn Sender
	txna Applications 0
	app_params_get AppCreator
	assert
	==
	assert

	// contracts/immutable-v4.algo.ts:11
	// this.sourceApplication.value = app
	byte "sourceApplication"
	frame_dig -1 // app: application
	app_global_put
	retsub

// setStorageApplication(application)void
abi_route_setStorageApplication:
	// app: application
	txna ApplicationArgs 1
	btoi
	txnas Applications

	// execute setStorageApplication(application)void
	callsub setStorageApplication
	int 1
	return

setStorageApplication:
	proto 1 0

	// contracts/immutable-v4.algo.ts:15
	// assert(this.txn.sender === this.app.creator)
	txn Sender
	txna Applications 0
	app_params_get AppCreator
	assert
	==
	assert

	// contracts/immutable-v4.algo.ts:16
	// this.storageApplication.value = app
	byte "storageApplication"
	frame_dig -1 // app: application
	app_global_put
	retsub

// sum(application,uint64,uint64)uint64
//
// // eslint-disable-next-line no-unused-vars
abi_route_sum:
	// sourceApp: application
	txna ApplicationArgs 3
	btoi
	txnas Applications

	// b: uint64
	txna ApplicationArgs 2
	btoi

	// a: uint64
	txna ApplicationArgs 1
	btoi

	// execute sum(application,uint64,uint64)uint64
	callsub sum
	int 1
	return

sum:
	proto 3 0

	// contracts/immutable-v4.algo.ts:21
	// assert(this.txn.sender === this.sourceApplication.value.address)
	txn Sender
	byte "sourceApplication"
	app_global_get
	app_params_get AppAddress
	assert
	==
	assert

	// contracts/immutable-v4.algo.ts:22
	// return a + b;
	frame_dig -1 // a: uint64
	frame_dig -2 // b: uint64
	+
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

// sumMR(application,application,uint64)uint64
//
// // eslint-disable-next-line no-unused-vars
abi_route_sumMR:
	// storageApp: application
	txna ApplicationArgs 3
	btoi
	txnas Applications

	// sourceApp: application
	txna ApplicationArgs 2
	btoi
	txnas Applications

	// a: uint64
	txna ApplicationArgs 1
	btoi

	// execute sumMR(application,application,uint64)uint64
	callsub sumMR
	int 1
	return

sumMR:
	proto 3 0

	// contracts/immutable-v4.algo.ts:27
	// assert(this.txn.sender === this.sourceApplication.value.address)
	txn Sender
	byte "sourceApplication"
	app_global_get
	app_params_get AppAddress
	assert
	==
	assert

	// contracts/immutable-v4.algo.ts:28
	// return a + castBytes<number>(this.storageApplication.value.global('m'));
	frame_dig -1 // a: uint64
	byte "storageApplication"
	app_global_get
	byte "m"
	app_global_get_ex
	assert
	+
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

// ms(application,application,uint64)void
//
// // eslint-disable-next-line no-unused-vars
abi_route_ms:
	// storageApp: application
	txna ApplicationArgs 3
	btoi
	txnas Applications

	// sourceApp: application
	txna ApplicationArgs 2
	btoi
	txnas Applications

	// value: uint64
	txna ApplicationArgs 1
	btoi

	// execute ms(application,application,uint64)void
	callsub ms
	int 1
	return

ms:
	proto 3 0

	// contracts/immutable-v4.algo.ts:33
	// assert(this.txn.sender === this.sourceApplication.value.address)
	txn Sender
	byte "sourceApplication"
	app_global_get
	app_params_get AppAddress
	assert
	==
	assert

	// contracts/immutable-v4.algo.ts:34
	// sendMethodCall<[number, Application], void>({
	//       applicationID: this.storageApplication.value,
	//       name: 'setMemory',
	//       methodArgs: [value, this.app],
	//     })
	itxn_begin
	int appl
	itxn_field TypeEnum
	method "setMemory(uint64,application)void"
	itxn_field ApplicationArgs

	// contracts/immutable-v4.algo.ts:35
	// applicationID: this.storageApplication.value
	byte "storageApplication"
	app_global_get
	itxn_field ApplicationID

	// contracts/immutable-v4.algo.ts:37
	// methodArgs: [value, this.app]
	frame_dig -1 // value: uint64
	itob
	itxn_field ApplicationArgs
	txna Applications 0
	itxn_field Applications
	byte 0x0000000000000001
	itxn_field ApplicationArgs

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

abi_route_createApplication:
	int 1
	return

create_NoOp:
	method "createApplication()void"
	txna ApplicationArgs 0
	match abi_route_createApplication
	err

call_NoOp:
	method "setSourceApplication(application)void"
	method "setStorageApplication(application)void"
	method "sum(uint64,uint64,application)uint64"
	method "sumMR(uint64,application,application)uint64"
	method "ms(uint64,application,application)void"
	txna ApplicationArgs 0
	match abi_route_setSourceApplication abi_route_setStorageApplication abi_route_sum abi_route_sumMR abi_route_ms
	err